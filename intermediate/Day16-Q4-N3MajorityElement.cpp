#include <iostream>
#include <vector>
using namespace std;

int repeatedNumber(const vector<int> &A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    //59 1000727 1000727 1000641 1000517 1000212 1000532 1000727 1001000 1000254 1000106 1000405 1000100 1000736 1000727 1000727 1000787 1000105 1000713 1000727 1000333 1000069 1000727 1000877 1000222 1000727 1000505 1000641 1000533 1000727 1000727 1000727 1000508 1000475 1000727 1000573 1000727 1000618 1000727 1000309 1000486 1000792 1000727 1000727 1000426 1000547 1000727 1000972 1000575 1000303 1000727 1000533 1000669 1000489 1000727 1000329 1000727 1000050 1000209 1000109
    int f1=0, f2=0, m1=0, m2=0, N=A.size(), c1=0, c2=0,a,b;
    for (int i=0; i<N; i++){
        if(f1==0 && (f2==0 ||A[i]!=A[m2] )){
            m1=i;
            f1++;
            a=A[m1];
        }
        else if(f1!=0 && f2==0 && A[i]!=A[m1]){
            m2=i;
            f2++;
            b=A[m2];
        }
        else if(f1!=0 && A[i]==A[m1]){
            f1++;
        }
        else if(f2!=0 && A[i]==A[m2]){
            f2++;
        }
        else{
            f1--;
            f2--;
        }
    }
    cout <<"m1 "<<A[m1]<<"\n";
    cout<<"m2 "<<A[m2]<<"\n";
    for (int i=0; i<N; i++){
        if (A[i]==A[m1]){c1++;}
        else if (A[i]==A[m2]){c2++;}
    }
    //
    if (c1>N/3){return A[m1];}
    else if (c2>N/3){return A[m2];}
    else {return -1;}
}

int  main(){
    //vector<int> A{};
    vector<int> A{1000727,1000727,1000641,1000517,1000212,1000532,1000727,1001000,1000254,1000106,1000405,1000100,1000736,1000727,1000727,1000787,1000105,1000713,1000727,1000333,1000069,1000727,1000877,1000222,1000727,1000505,1000641,1000533,1000727,1000727,1000727,1000508,1000475,1000727,1000573,1000727,1000618,1000727,1000309,1000486,1000792,1000727,1000727,1000426,1000547,1000727,1000972,1000575,1000303,1000727,1000533,1000669,1000489,1000727,1000329,1000727,1000050,1000209,1000109};
    //59 1000727 1000727 1000641 1000517 1000212 1000532 1000727 1001000 1000254 1000106 1000405 1000100 1000736 1000727 1000727 1000787 1000105 1000713 1000727 1000333 1000069 1000727 1000877 1000222 1000727 1000505 1000641 1000533 1000727 1000727 1000727 1000508 1000475 1000727 1000573 1000727 1000618 1000727 1000309 1000486 1000792 1000727 1000727 1000426 1000547 1000727 1000972 1000575 1000303 1000727 1000533 1000669 1000489 1000727 1000329 1000727 1000050 1000209 1000109

    // 112 1000697 1000110 1000110 1000671 1000941 1000304 1000110 1000742 1000160 1000558 1000110 1000110 1000110 1000650 1000200 1000110 1000133 1000110 1000548 1000002 1000397 1000110 1000533 1000724 1000110 1000882 1000110 1000515 1000110 1000110 1000110 1000181 1000051 1000110 1000110 1000644 1000110 1000301 1000110 1000040 1000424 1000336 1000426 1000244 1000485 1000439 1000554 1000110 1000110 1000497 1000836 1000760 1000110 1000135 1000872 1000110 1000739 1000242 1000790 1000110 1000384 1000110 1000384 1000110 1000713 1000110 1000110 1000048 1000110 1000172 1000727 1000502 1000649 1000830 1000387 1000953 1000110 1000640 1000291 1000612 1000389 1000110 1000698 1000462 1000054 1000110 1000110 1000181 1000221 1000408 1000110 1000905 1000110 1000532 1000939 1000110 1000817 1000388 1000069 1000110 1000163 1000453 1000847 1000908 1000395 1000574 1000127 1000132 1000110 1000110 1000201 1000689
    int anss;
    anss=repeatedNumber(A);
    
   cout << anss;
}



